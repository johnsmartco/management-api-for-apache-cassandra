{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Management API for Apache Cassandra",
    "description" : "This is a Restful service for operating Apache Cassandra.  You can find out more about the Management API on [Github](http://github.com/datastax/management-api-for-apache-cassandra)",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "0.1"
  },

  "tags": [
    {
      "name": "authorization",
      "description": "Create an authorization token to connect to Apache Cassandra"
    },
    {
      "name": "probes",
      "description": "Determine whether Apache Cassandra can receive requests"
    },
    {
      "name": "operations",
      "description": "Send operational requests to Apache Cassandra"
    },
    {
      "name": "lifecycle",
      "description": "Start, stop, configure Apache Cassandra service lifecycle"
    },
    {
      "name": "metadata",
      "description": "Returns Apache Cassandra metadata"
    }
  ],

"externalDocs" : {
  "description" : "DataStax Kubernetes Operator for Apache Cassandra Documentation",
  "url" : "https://docs.datastax.com/en/cass-operator/doc/cass-operator/cassOperatorTOC.html"
},

  "paths" : {
    "/api/v0/ops/auth/role" : {
      "post" : {
        "tags" : "authorization",
        "summary" : "Creates a new user role",
        "operationId" : "createRole",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "is_superuser",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "can_login",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/probes/liveness" : {
      "get" : {
        "tags" : "probes",
        "summary" : "Indicates whether this service is running",
        "operationId" : "checkLiveness",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/probes/readiness" : {
      "get" : {
        "tags" : "probes",
        "summary" : "Indicates whether the Cassandra service is ready to service requests",
        "operationId" : "checkReadiness",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/probes/cluster" : {
      "get" : {
        "tags" : "probes",
        "summary" : "Indicated whether the Cassandra cluster is able to achieve the specified consistency",
        "operationId" : "checkClusterConsistency",
        "parameters" : [ {
          "name" : "consistency_level",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rf_per_dc",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/seeds/reload" : {
      "post" : {
        "tags" : "operations",
        "operationId" : "seedReload",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/keyspace/refresh" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Load newly placed SSTables to the system without restart",
        "operationId" : "refresh",
        "parameters" : [ {
          "name" : "keyspaceName",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "table",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/keyspace/cleanup" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Triggers the immediate cleanup of keys no longer belonging to a node. By default, clean all keyspaces",
        "operationId" : "cleanup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/lifecycle/start" : {
      "post" : {
        "tags" : "lifecycle",
        "description" : "Starts Cassandra",
        "operationId" : "startNode",
        "parameters" : [ {
          "name" : "profile",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replace_ip",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/api/v0/lifecycle/stop" : {
      "post" : {
        "tags" : "lifecycle",
        "description" : "Stops Cassandra. Keeps node from restarting automatically until /start is called",
        "operationId" : "stopNode",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/api/v0/lifecycle/configure" : {
      "post" : {
        "tags" : "lifecycle",
        "description" : "Configure Cassandra. Will fail if Cassandra is already started",
        "operationId" : "configureNode",
        "parameters" : [ {
          "name" : "profile",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/api/v0/lifecycle/pid" : {
      "get" : {
        "tags" : "lifecycle",
        "description" : "The PID of Cassandra, if it's running",
        "operationId" : "getPID",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/api/v0/metadata/versions/release" : {
      "get" : {
        "tags" : "metadata",
        "summary" : "Returns the Cassandra release version",
        "operationId" : "getReleaseVersion",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/metadata/endpoints" : {
      "get" : {
        "tags" : "metadata",
        "summary" : "Returns this nodes view of the endpoint states of nodes",
        "operationId" : "getEndpointStates",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/drain" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Drain the node (stop accepting writes and flush all tables)",
        "operationId" : "drain",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/compaction" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Set the MB/s throughput cap for compaction in the system, or 0 to disable throttling",
        "operationId" : "setCompactionThroughput",
        "parameters" : [ {
          "name" : "value",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/assassinate" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Forcefully remove a dead node without re-replicating any data. Use as a last resort if you cannot removenode",
        "operationId" : "assassinate",
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/logging" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Set the log level threshold for a given component or class. Will reset to the initial configuration if called with no parameters.",
        "operationId" : "setLoggingLevel",
        "parameters" : [ {
          "name" : "target",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rawLevel",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/hints/truncate" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Truncate all hints on the local node, or truncate hints for the endpoint(s) specified.",
        "operationId" : "truncateHints",
        "parameters" : [ {
          "name" : "host",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/schema/reset" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Reset node's local schema and resync",
        "operationId" : "resetLocalSchema",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/schema/reload" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Reload local node schema from system tables",
        "operationId" : "reloadLocalSchema",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/node/decommission" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Decommission the *node I am connecting to*",
        "operationId" : "decommission",
        "parameters" : [ {
          "name" : "force",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/tables/compact" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Force a (major) compaction on one or more tables or user-defined compaction on given SSTables",
        "operationId" : "compact",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompactRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/tables/garbagecollect" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Remove deleted data from one or more tables",
        "operationId" : "garbageCollect",
        "parameters" : [ {
          "name" : "tombstoneOption",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/tables/scrub" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Scrub (rebuild sstables for) one or more tables",
        "operationId" : "scrub",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScrubRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/tables/sstables/upgrade" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Rewrite sstables (for the requested tables) that are not on the current version (thus upgrading them to said current version)",
        "operationId" : "upgradeSSTables",
        "parameters" : [ {
          "name" : "excludeCurrentVersion",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/api/v0/ops/tables/flush" : {
      "post" : {
        "tags" : "operations",
        "summary" : "Flush one or more tables",
        "operationId" : "flush",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "KeyspaceRequest" : {
        "required" : [ "jobs", "keyspace_name", "tables" ],
        "type" : "object",
        "properties" : {
          "jobs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompactRequest" : {
        "required" : [ "keyspace_name", "split_output", "user_defined" ],
        "type" : "object",
        "properties" : {
          "split_output" : {
            "type" : "boolean"
          },
          "user_defined" : {
            "type" : "boolean"
          },
          "start_token" : {
            "type" : "string"
          },
          "end_token" : {
            "type" : "string"
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "user_defined_files" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ScrubRequest" : {
        "required" : [ "check_data", "disable_snapshot", "jobs", "keyspace_name", "reinsert_overflowed_ttl", "skip_corrupted", "tables" ],
        "type" : "object",
        "properties" : {
          "disable_snapshot" : {
            "type" : "boolean"
          },
          "skip_corrupted" : {
            "type" : "boolean"
          },
          "check_data" : {
            "type" : "boolean"
          },
          "reinsert_overflowed_ttl" : {
            "type" : "boolean"
          },
          "jobs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    }
  }
}